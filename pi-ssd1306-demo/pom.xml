<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.bidib.eu.ondryaso</groupId>
		<artifactId>ssd1306-parent</artifactId>
		<version>1.1-SNAPSHOT</version>
	</parent>
	<artifactId>ssd1306-demo</artifactId>
	<packaging>jar</packaging>
	<name>SSD1306 :: Demo</name>
	<description>SSD1306 :: Demo POM</description>
    
    <properties>
		<!-- DEFAULT SETTINGS FOR REMOTELY BUILDING NATIVE LIBRARY ON A REMOTE 
			PLATFORM -->
		<pi4j.default.host>192.168.1.100</pi4j.default.host>
		<pi4j.default.port>22</pi4j.default.port>
		<pi4j.default.user>pi</pi4j.default.user>
		<pi4j.default.password>raspberry</pi4j.default.password>
		<pi4j.default.directory>pi4j-temp</pi4j.default.directory>

		<!-- SETTINGS FOR COPYING Pi4J ARTIFACTS TO DEVELOPMENT DEVICE/PLATFORM -->
		<pi4j.dev.transfer>false</pi4j.dev.transfer>
		<pi4j.dev.host>${pi4j.default.host}</pi4j.dev.host>
		<pi4j.dev.port>${pi4j.default.port}</pi4j.dev.port>
		<pi4j.dev.user>${pi4j.default.user}</pi4j.dev.user>
		<pi4j.dev.password>${pi4j.default.password}</pi4j.dev.password>
		<pi4j.dev.directory>pi4j-dev</pi4j.dev.directory>

    </properties>
    
	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
            <groupId>org.bidib.eu.ondryaso</groupId>
            <artifactId>ssd1306-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<includePom>true</includePom>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>com.soebes.maven.plugins</groupId>
                <artifactId>iterator-maven-plugin</artifactId>
                <version>0.5.1</version>
				<executions>
          			<execution>
			            <phase>package</phase>
			            <goals>
			              <goal>iterator</goal>
			            </goals>
						<configuration>
							<items>
				                <item>Pixels</item>
				                <item>PixelsI2c</item>
				                <item>Pong</item>
							</items>
							<pluginExecutors>
								<pluginExecutor>							
						            <plugin>
						                <groupId>org.apache.maven.plugins</groupId>
						                <artifactId>maven-jar-plugin</artifactId>
						            </plugin>
						            <goal>jar</goal>
					                <configuration>
					                	
					                    <archive>
					                        <manifest>
					                            <addClasspath>true</addClasspath>
					                            <mainClass>eu.ondryaso.ssd1306.examples.@item@</mainClass>
					                        </manifest>
					                    </archive>
					                    
					                    <classifier>@item@</classifier>
					                </configuration>
						        </pluginExecutor>
            					<pluginExecutor>
									<plugin>
										<artifactId>maven-assembly-plugin</artifactId>
						            </plugin>
						            <goal>single</goal>
									<configuration>
										<archive>
											<manifest>
												<mainClass>eu.ondryaso.ssd1306.examples.@item@</mainClass>
											</manifest>
										</archive>
										<descriptorRefs>
											<descriptorRef>jar-with-dependencies</descriptorRef>
										</descriptorRefs>
										<finalName>${project.artifactId}-${project.version}-@item@</finalName>
									</configuration>
									<!-- 
									<executions>
										<execution>
											<id>make-assembly</id> 
											<phase>package</phase> 
											<goals>
												<goal>single</goal>
											</goals>
										</execution>
									</executions>
									-->
						        </pluginExecutor>
							</pluginExecutors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- OPTIONALLY DEPLOY THE FINAL JAR TO THE RASPBERRY PI -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>

					<!-- copy the compiled JAR file to the Raspberry Pi platform platform -->
					<execution>
						<id>transfer-compiled-pi4j-example-jar</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath" />
								<if>
									<equals arg1="${pi4j.dev.transfer}" arg2="true" />
									<then>

										<!-- ensure the target directory exists on the Raspberry Pi -->
										<sshexec host="${pi4j.dev.host}" port="${pi4j.dev.port}"
											username="${pi4j.dev.user}" password="${pi4j.dev.password}"
											trust="true" failonerror="false" verbose="true"
											command="mkdir --parents ${pi4j.dev.directory}" />

										<!-- copy the JAR files to the Raspberry Pi -->
										<scp
											todir="${pi4j.dev.user}:${pi4j.dev.password}@${pi4j.dev.host}:${pi4j.dev.directory}"
											port="${pi4j.dev.port}" trust="true" verbose="true"
											failonerror="true">
											<fileset dir="${project.build.directory}">
										      	<include name="**/*-jar-with-dependencies.jar"/>
										    </fileset>
										</scp>

									</then>
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-jsch</artifactId>
						<version>${ant-jsch.version}</version>
					</dependency>
					<dependency>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
						<version>${jsch.version}</version>
					</dependency>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>${ant-contrib.version}</version>
					</dependency>
				</dependencies>
			</plugin>
        </plugins>
	</build>
</project>
